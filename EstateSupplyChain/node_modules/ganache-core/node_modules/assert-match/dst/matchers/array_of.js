'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _strict = require('./strict');

var _strict2 = _interopRequireDefault(_strict);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var ArrayOfMatcher = function (_StrictMatch) {
    (0, _inherits3.default)(ArrayOfMatcher, _StrictMatch);

    function ArrayOfMatcher() {
        (0, _classCallCheck3.default)(this, ArrayOfMatcher);
        return (0, _possibleConstructorReturn3.default)(this, (ArrayOfMatcher.__proto__ || (0, _getPrototypeOf2.default)(ArrayOfMatcher)).apply(this, arguments));
    }

    (0, _createClass3.default)(ArrayOfMatcher, [{
        key: 'match',
        value: function match(actual, comparator) {

            if (!Array.isArray(actual)) {

                return {
                    match: false,
                    actual: actual,
                    expected: '[an Array]'
                };
            }

            if (!actual.length) {

                return {
                    match: false,
                    actual: actual,
                    expected: '[not an empty Array]'
                };
            }

            var match = true;

            var expected = actual.map(function (el) {

                var result = this.check(el, comparator);
                match = match && result.match;

                return result.match ? result.actual : result.expected;
            }, this);

            return {
                match: match,
                actual: actual,
                expected: expected
            };
        }
    }]);
    return ArrayOfMatcher;
}(_strict2.default);

exports.default = ArrayOfMatcher;
module.exports = exports['default'];