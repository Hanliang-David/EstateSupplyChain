'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _esToPrimitive = require('es-to-primitive');

var _esToPrimitive2 = _interopRequireDefault(_esToPrimitive);

var _strict = require('./strict');

var _strict2 = _interopRequireDefault(_strict);

var _utils = require('../util/utils');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var PrimitiveMatcher = function (_StrictMatcher) {
    (0, _inherits3.default)(PrimitiveMatcher, _StrictMatcher);

    function PrimitiveMatcher() {
        (0, _classCallCheck3.default)(this, PrimitiveMatcher);
        return (0, _possibleConstructorReturn3.default)(this, (PrimitiveMatcher.__proto__ || (0, _getPrototypeOf2.default)(PrimitiveMatcher)).apply(this, arguments));
    }

    (0, _createClass3.default)(PrimitiveMatcher, [{
        key: 'match',
        value: function match(actual, comparator) {

            var primitiveActual = void 0,
                primitiveExpected = this.expected;

            try {

                primitiveActual = (0, _esToPrimitive2.default)(actual);

                if (!(0, _utils.isMatcher)(primitiveExpected)) {
                    primitiveExpected = (0, _esToPrimitive2.default)(this.expected);
                }
            } catch (e) {

                return {
                    match: false,
                    actual: actual,
                    expected: { '[primitively matches]': this.expected }
                };
            }

            var innerMatcher = new _strict2.default(primitiveExpected);

            var result = innerMatcher.match(primitiveActual, comparator);

            var expected = result.match ? actual : { '[primitively matches]': result.expected };

            return {
                match: result.match,
                actual: actual,
                expected: expected
            };
        }
    }]);
    return PrimitiveMatcher;
}(_strict2.default);

exports.default = PrimitiveMatcher;
module.exports = exports['default'];